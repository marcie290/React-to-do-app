{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","Task","task","onDelete","cursor","id","day","Tasks","tasks","map","App","useState","reminder","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAEMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAE1B,OAAO,wBAAQA,QAAUA,EAAUC,MAAO,CAACC,gBAAiBJ,GAAOK,UAAU,MAAtE,SAA6EJ,KAGxFF,EAAOO,aAAe,CAClBN,MAAO,SAUID,QChBDQ,EAAS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAOpB,OACI,yBAAQH,UAAU,SAAlB,UACI,6BAAKG,IACL,cAAC,EAAD,CAAQR,MAAM,QAAQC,KAAK,MAAMC,QAR1B,mBAcnBK,EAAOD,aAAe,CACnBE,MAAO,gBAEKD,Q,OCVDE,EATF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SACnB,OACI,sBAAKN,UAAU,OAAf,UACI,+BAAKK,EAAKT,KAAV,IAAgB,cAAC,IAAD,CAASE,MAAO,CAACH,MAAO,YAAaY,OAAQ,WAC7DV,QAAS,kBAAIS,EAASD,EAAKG,UAC3B,4BAAIH,EAAKI,UCKJC,EAVD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOL,EAAe,EAAfA,SACpB,OACI,mCACCK,EAAMC,KAAI,SAACP,GAAD,OACP,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,GAA/BD,EAAKG,UCmCbK,EArCH,WAER,MAA0BC,mBAAS,CACjC,CACIN,GAAI,EACJZ,KAAM,sBACNa,IAAK,oBACLM,UAAU,GAEd,CACEP,GAAI,EACJZ,KAAM,sBACNa,IAAK,oBACLM,UAAU,GAEd,CACEP,GAAI,EACJZ,KAAM,sBACNa,IAAK,oBACLM,UAAU,KAjBZ,mBAAOJ,EAAP,KAAcK,EAAd,KAyBF,OACE,sBAAKhB,UAAU,YAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,CAAOW,MAAOA,EAAOL,SAPL,SAACE,GAClBQ,EAASL,EAAMM,QAAO,SAACZ,GAAD,OAAQA,EAAKG,KAAMA,aChB9BU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6ebcdbb.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n\r\n    return <button onClick ={onClick}  style={{backgroundColor: color}}className='btn'>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'black'\r\n}\r\n\r\n\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button"," import PropTypes from 'prop-types'\r\n import Button from './Button'\r\n export const Header = ({title}) => {\r\n\r\n    const onClick = () => {\r\n        const onClick = () => {\r\n            console.log('Click')\r\n        }\r\n    }\r\n     return (\r\n         <header className='header'>\r\n             <h1>{title}</h1>\r\n             <Button color='white' text='Add' onClick={onClick} />\r\n         </header>\r\n\r\n     )\r\n }\r\n\r\n Header.defaultProps = {\r\n    title: 'Task Tracker',\r\n }\r\n export default Header","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete}) => {\r\n  return (\r\n      <div className='task'>\r\n          <h3>{task.text} <FaTimes style={{color: 'lightblue', cursor: 'pointer'}} \r\n          onClick={()=>onDelete(task.id)} /></h3>\r\n          <p>{task.day}</p>\r\n      </div>\r\n  )\r\n}\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete }) => {\r\n    return (\r\n        <>\r\n        {tasks.map((task) => (\r\n            <Task key={task.id} task={task} onDelete={onDelete}/>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n\r\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState } from 'react'\n\nconst App = () => {\n\n    const [tasks, setTasks] = useState([\n      {\n          id: 1,\n          text: 'Doctors Appointment',\n          day: 'Feb 5th at 2:30pm',\n          reminder: true,\n      },\n      {\n        id: 2,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Doctors Appointment',\n      day: 'Feb 5th at 2:30pm',\n      reminder: true,\n  },\n  ])\n \n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task)=>task.id !==id))\n  }\n\n  return (\n    <div className='container'>\n     <Header />\n     <Tasks tasks={tasks} onDelete={deleteTask}/>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}